/* Generated by Yosys 0.8+299 (git sha1 ccfa2fe0, clang 6.0.0-1ubuntu2 -fPIC -Os) */

(* top =  1  *)
(* generator = "nMigen" *)
module loopback(uod, uov, rst, clk, uid, uiv, uor, leds, uir);
  (* src = "loopback.py:36" *)
  reg [7:0] \$next\data ;
  (* src = "loopback.py:18" *)
  reg [3:0] \$next\leds ;
  (* src = "loopback.py:35" *)
  reg \$next\ready ;
  (* src = "loopback.py:13" *)
  reg [7:0] \$next\uid ;
  (* src = "loopback.py:11" *)
  reg \$next\uiv ;
  (* src = "loopback.py:16" *)
  reg \$next\uor ;
  (* src = "loopback.py:37" *)
  reg \$next\valid ;
  (* src = "/usr/local/lib/python3.6/dist-packages/nmigen/hdl/ir.py:304" *)
  input clk;
  (* src = "loopback.py:36" *)
  wire [7:0] data;
  (* init = 4'h0 *)
  (* src = "loopback.py:18" *)
  output [3:0] leds;
  reg [3:0] leds = 4'h0;
  (* init = 1'h0 *)
  (* src = "loopback.py:35" *)
  reg ready = 1'h0;
  (* src = "/usr/local/lib/python3.6/dist-packages/nmigen/hdl/ir.py:304" *)
  input rst;
  (* init = 8'h00 *)
  (* src = "loopback.py:13" *)
  output [7:0] uid;
  reg [7:0] uid = 8'h00;
  (* src = "loopback.py:12" *)
  input uir;
  (* init = 1'h0 *)
  (* src = "loopback.py:11" *)
  output uiv;
  reg uiv = 1'h0;
  (* src = "loopback.py:17" *)
  input [7:0] uod;
  (* init = 1'h0 *)
  (* src = "loopback.py:16" *)
  output uor;
  reg uor = 1'h0;
  (* src = "loopback.py:15" *)
  input uov;
  (* src = "loopback.py:37" *)
  wire valid;
  always @(posedge clk)
      uor <= \$next\uor ;
  always @(posedge clk)
      leds <= \$next\leds ;
  always @(posedge clk)
      uiv <= \$next\uiv ;
  always @(posedge clk)
      uid <= \$next\uid ;
  always @(posedge clk)
      ready <= \$next\ready ;
  always @* begin
    \$next\ready  = ready;
    \$next\ready  = uir;
    casez (rst)
      1'h1:
          \$next\ready  = 1'h0;
    endcase
  end
  always @* begin
    \$next\uid  = uid;
    \$next\uid  = 8'h00;
    casez (rst)
      1'h1:
          \$next\uid  = 8'h00;
    endcase
  end
  always @* begin
    \$next\uiv  = uiv;
    \$next\uiv  = 1'h0;
    casez (rst)
      1'h1:
          \$next\uiv  = 1'h0;
    endcase
  end
  always @* begin
    \$next\leds  = leds;
    \$next\leds [1] = valid;
    \$next\leds [0] = uir;
    \$next\leds [2] = 1'h0;
    \$next\leds [3] = ready;
    casez (rst)
      1'h1:
          \$next\leds  = 4'h0;
    endcase
  end
  always @* begin
    \$next\data  = 8'h00;
    \$next\data  = uod;
  end
  always @* begin
    \$next\valid  = 1'h0;
    \$next\valid  = uov;
  end
  always @* begin
    \$next\uor  = uor;
    \$next\uor  = 1'h1;
    casez (rst)
      1'h1:
          \$next\uor  = 1'h0;
    endcase
  end
  assign valid = \$next\valid ;
  assign data = \$next\data ;
endmodule
