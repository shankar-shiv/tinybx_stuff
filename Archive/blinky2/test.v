/* Generated by Yosys 0.8+308 (git sha1 7682629b, clang 7.0.1-4 -fPIC -Os) */

(* \nmigen.hierarchy  = "top.anonymous" *)
(* generator = "nMigen" *)
module anonymous(clk, LED);
  (* src = "blinky.py:20" *)
  reg \$next\LED ;
  (* src = "blinky.py:20" *)
  output LED;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  wire o;
  \anonymous$1  \$1  (
    .clk(clk),
    .o(o)
  );
  always @* begin
    \$next\LED  = 1'h0;
    \$next\LED  = o;
  end
  assign LED = \$next\LED ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$1 (clk, o);
  wire \$1 ;
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire [20:0] \$17 ;
  wire [20:0] \$18 ;
  wire \$2 ;
  wire \$4 ;
  wire \$6 ;
  wire \$8 ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  reg \$next\o ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [10:0] \$next\state ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] \$next\stretcher ;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  output o;
  (* init = 11'h67c *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [10:0] state = 11'h67c;
  (* init = 20'h00000 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] stretcher = 20'h00000;
  assign \$10  = \$8  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[10];
  assign \$1  = ~ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) \$10 ;
  assign \$13  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:23" *) 20'hfa000;
  assign \$15  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:26" *) 20'hfa001;
  assign \$18  = stretcher + (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:29" *) 1'h1;
  assign \$2  = state[0] ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[3];
  assign \$4  = \$2  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[4];
  assign \$6  = \$4  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[7];
  assign \$8  = \$6  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[8];
  always @(posedge clk)
      state <= \$next\state ;
  always @(posedge clk)
      stretcher <= \$next\stretcher ;
  always @* begin
    \$next\o  = 1'h0;
    \$next\o  = \$1 ;
  end
  always @* begin
    \$next\state  = state;
    casez (\$13 )
      1'h1:
          \$next\state  = { state[9:0], o };
    endcase
  end
  always @* begin
    \$next\stretcher  = stretcher;
    casez (\$15 )
      1'h1:
          \$next\stretcher  = 20'h00000;
      1'hz:
          \$next\stretcher  = \$17 [19:0];
    endcase
  end
  assign \$17  = \$18 ;
  assign o = \$next\o ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$2 (PIN_12, clk);
  (* src = "blinky.py:20" *)
  reg \$next\PIN_12 ;
  (* src = "blinky.py:20" *)
  output PIN_12;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  wire o;
  \anonymous$3  \$1  (
    .clk(clk),
    .o(o)
  );
  always @* begin
    \$next\PIN_12  = 1'h0;
    \$next\PIN_12  = o;
  end
  assign PIN_12 = \$next\PIN_12 ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$3 (o, clk);
  wire \$1 ;
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire [20:0] \$17 ;
  wire [20:0] \$18 ;
  wire \$2 ;
  wire \$4 ;
  wire \$6 ;
  wire \$8 ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  reg \$next\o ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [12:0] \$next\state ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] \$next\stretcher ;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  output o;
  (* init = 13'h0c63 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [12:0] state = 13'h0c63;
  (* init = 20'h00000 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] stretcher = 20'h00000;
  assign \$10  = \$8  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[12];
  assign \$1  = ~ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) \$10 ;
  assign \$13  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:23" *) 20'hfa000;
  assign \$15  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:26" *) 20'hfa001;
  assign \$18  = stretcher + (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:29" *) 1'h1;
  assign \$2  = state[1] ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[3];
  assign \$4  = \$2  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[4];
  assign \$6  = \$4  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[6];
  assign \$8  = \$6  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[9];
  always @(posedge clk)
      stretcher <= \$next\stretcher ;
  always @(posedge clk)
      state <= \$next\state ;
  always @* begin
    \$next\o  = 1'h0;
    \$next\o  = \$1 ;
  end
  always @* begin
    \$next\state  = state;
    casez (\$13 )
      1'h1:
          \$next\state  = { state[11:0], o };
    endcase
  end
  always @* begin
    \$next\stretcher  = stretcher;
    casez (\$15 )
      1'h1:
          \$next\stretcher  = 20'h00000;
      1'hz:
          \$next\stretcher  = \$17 [19:0];
    endcase
  end
  assign \$17  = \$18 ;
  assign o = \$next\o ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$4 (PIN_13, clk);
  (* src = "blinky.py:20" *)
  reg \$next\PIN_13 ;
  (* src = "blinky.py:20" *)
  output PIN_13;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  wire o;
  \anonymous$5  \$1  (
    .clk(clk),
    .o(o)
  );
  always @* begin
    \$next\PIN_13  = 1'h0;
    \$next\PIN_13  = o;
  end
  assign PIN_13 = \$next\PIN_13 ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$5 (o, clk);
  wire \$1 ;
  wire \$11 ;
  wire [20:0] \$13 ;
  wire [20:0] \$14 ;
  wire \$2 ;
  wire \$4 ;
  wire \$6 ;
  wire \$9 ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  reg \$next\o ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [15:0] \$next\state ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] \$next\stretcher ;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  output o;
  (* init = 16'hda94 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [15:0] state = 16'hda94;
  (* init = 20'h00000 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] stretcher = 20'h00000;
  assign \$9  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:23" *) 20'hfa000;
  assign \$11  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:26" *) 20'hfa001;
  assign \$14  = stretcher + (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:29" *) 1'h1;
  assign \$2  = state[0] ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[6];
  assign \$4  = \$2  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[9];
  assign \$6  = \$4  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[15];
  assign \$1  = ~ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) \$6 ;
  always @(posedge clk)
      stretcher <= \$next\stretcher ;
  always @(posedge clk)
      state <= \$next\state ;
  always @* begin
    \$next\o  = 1'h0;
    \$next\o  = \$1 ;
  end
  always @* begin
    \$next\state  = state;
    casez (\$9 )
      1'h1:
          \$next\state  = { state[14:0], o };
    endcase
  end
  always @* begin
    \$next\stretcher  = stretcher;
    casez (\$11 )
      1'h1:
          \$next\stretcher  = 20'h00000;
      1'hz:
          \$next\stretcher  = \$13 [19:0];
    endcase
  end
  assign \$13  = \$14 ;
  assign o = \$next\o ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$6 (PIN_14, clk);
  (* src = "blinky.py:20" *)
  reg \$next\PIN_14 ;
  (* src = "blinky.py:20" *)
  output PIN_14;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  wire o;
  \anonymous$7  \$1  (
    .clk(clk),
    .o(o)
  );
  always @* begin
    \$next\PIN_14  = 1'h0;
    \$next\PIN_14  = o;
  end
  assign PIN_14 = \$next\PIN_14 ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$7 (o, clk);
  wire \$1 ;
  wire \$11 ;
  wire [20:0] \$13 ;
  wire [20:0] \$14 ;
  wire \$2 ;
  wire \$4 ;
  wire \$6 ;
  wire \$9 ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  reg \$next\o ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [6:0] \$next\state ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] \$next\stretcher ;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  output o;
  (* init = 7'h28 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [6:0] state = 7'h28;
  (* init = 20'h00000 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] stretcher = 20'h00000;
  assign \$9  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:23" *) 20'hfa000;
  assign \$11  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:26" *) 20'hfa001;
  assign \$14  = stretcher + (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:29" *) 1'h1;
  assign \$2  = state[2] ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[3];
  assign \$4  = \$2  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[4];
  assign \$6  = \$4  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[6];
  assign \$1  = ~ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) \$6 ;
  always @(posedge clk)
      stretcher <= \$next\stretcher ;
  always @(posedge clk)
      state <= \$next\state ;
  always @* begin
    \$next\o  = 1'h0;
    \$next\o  = \$1 ;
  end
  always @* begin
    \$next\state  = state;
    casez (\$9 )
      1'h1:
          \$next\state  = { state[5:0], o };
    endcase
  end
  always @* begin
    \$next\stretcher  = stretcher;
    casez (\$11 )
      1'h1:
          \$next\stretcher  = 20'h00000;
      1'hz:
          \$next\stretcher  = \$13 [19:0];
    endcase
  end
  assign \$13  = \$14 ;
  assign o = \$next\o ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$8 (PIN_15, clk);
  (* src = "blinky.py:20" *)
  reg \$next\PIN_15 ;
  (* src = "blinky.py:20" *)
  output PIN_15;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  wire o;
  \anonymous$9  \$1  (
    .clk(clk),
    .o(o)
  );
  always @* begin
    \$next\PIN_15  = 1'h0;
    \$next\PIN_15  = o;
  end
  assign PIN_15 = \$next\PIN_15 ;
endmodule

(* \nmigen.hierarchy  = "top.anonymous.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$9 (o, clk);
  wire \$1 ;
  wire \$10 ;
  wire \$12 ;
  wire \$14 ;
  wire \$16 ;
  wire \$18 ;
  wire \$2 ;
  wire \$21 ;
  wire \$23 ;
  wire [20:0] \$25 ;
  wire [20:0] \$26 ;
  wire \$4 ;
  wire \$6 ;
  wire \$8 ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  reg \$next\o ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [31:0] \$next\state ;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] \$next\stretcher ;
  (* src = "blinky.py:37" *)
  input clk;
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:12" *)
  output o;
  (* init = 32'd2111312225 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:21" *)
  reg [31:0] state = 32'd2111312225;
  (* init = 20'h00000 *)
  (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:16" *)
  reg [19:0] stretcher = 20'h00000;
  assign \$10  = \$8  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[5];
  assign \$12  = \$10  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[7];
  assign \$14  = \$12  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[8];
  assign \$16  = \$14  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[9];
  assign \$18  = \$16  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[31];
  assign \$1  = ~ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) \$18 ;
  assign \$21  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:23" *) 20'hfa000;
  assign \$23  = stretcher == (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:26" *) 20'hfa001;
  assign \$26  = stretcher + (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:29" *) 1'h1;
  assign \$2  = state[0] ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[1];
  assign \$4  = \$2  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[2];
  assign \$6  = \$4  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[3];
  assign \$8  = \$6  ^ (* src = "/opt/FPGA/tinybx_stuff/blinky2/lsfr.py:22" *) state[4];
  always @(posedge clk)
      stretcher <= \$next\stretcher ;
  always @(posedge clk)
      state <= \$next\state ;
  always @* begin
    \$next\o  = 1'h0;
    \$next\o  = \$1 ;
  end
  always @* begin
    \$next\state  = state;
    casez (\$21 )
      1'h1:
          \$next\state  = { state[30:0], o };
    endcase
  end
  always @* begin
    \$next\stretcher  = stretcher;
    casez (\$23 )
      1'h1:
          \$next\stretcher  = 20'h00000;
      1'hz:
          \$next\stretcher  = \$25 [19:0];
    endcase
  end
  assign \$25  = \$26 ;
  assign o = \$next\o ;
endmodule

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(PIN_12, PIN_13, PIN_14, PIN_15, LED);
  (* src = "blinky.py:20" *)
  output LED;
  (* src = "blinky.py:20" *)
  output PIN_12;
  (* src = "blinky.py:20" *)
  output PIN_13;
  (* src = "blinky.py:20" *)
  output PIN_14;
  (* src = "blinky.py:20" *)
  output PIN_15;
  (* src = "blinky.py:37" *)
  wire clk;
  anonymous \$1  (
    .LED(LED),
    .clk(clk)
  );
  \anonymous$2  \$2  (
    .PIN_12(PIN_12),
    .clk(clk)
  );
  \anonymous$4  \$3  (
    .PIN_13(PIN_13),
    .clk(clk)
  );
  \anonymous$6  \$4  (
    .PIN_14(PIN_14),
    .clk(clk)
  );
  \anonymous$8  \$5  (
    .PIN_15(PIN_15),
    .clk(clk)
  );
  assign clk = 1'h0;
endmodule
